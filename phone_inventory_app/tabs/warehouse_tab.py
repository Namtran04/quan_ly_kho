import streamlit as st
import pandas as pd

def show_warehouse_tab():
    st.title("üìç Khu v·ª±c kho")
    
    # Kh·ªüi t·∫°o d·ªØ li·ªáu khu v·ª±c kho n·∫øu ch∆∞a c√≥
    if "warehouses" not in st.session_state:
        st.session_state.warehouses = pd.DataFrame(columns=["M√£ kho", "Khu v·ª±c", "Ghi ch√∫"])

    # D·ªØ li·ªáu m·∫´u ban ƒë·∫ßu
    if st.session_state.warehouses.empty:
        sample_warehouses = [
            {"M√£ kho": "W001", "Khu v·ª±c": "H√† N·ªôi", "Ghi ch√∫": "Kho ch√≠nh"},
            {"M√£ kho": "W002", "Khu v·ª±c": "H·ªì Ch√≠ Minh", "Ghi ch√∫": "Kho ph·ª•"},
            {"M√£ kho": "W003", "Khu v·ª±c": "ƒê√† N·∫µng", "Ghi ch√∫": "Kho mi·ªÅn Trung"},
            {"M√£ kho": "W004", "Khu v·ª±c": "H·∫£i Ph√≤ng", "Ghi ch√∫": "Kho mi·ªÅn B·∫Øc"},
            {"M√£ kho": "W005", "Khu v·ª±c": "C·∫ßn Th∆°", "Ghi ch√∫": "Kho mi·ªÅn T√¢y"},
        ]
        st.session_state.warehouses = pd.DataFrame(sample_warehouses)
    # üîç T√¨m ki·∫øm khu v·ª±c kho
    search_query = st.text_input("üîç Nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm:")
    if search_query:
        filtered_df = st.session_state.warehouses[
            st.session_state.warehouses.astype(str).apply(
                lambda row: search_query.lower() in row.to_string().lower(), axis=1
            )
        ]
        st.write("### K·∫øt qu·∫£ t√¨m ki·∫øm")
        st.dataframe(filtered_df, use_container_width=True)
    else:
        # Hi·ªÉn th·ªã b·∫£ng d·ªØ li·ªáu khu v·ª±c kho
        st.write("### Danh s√°ch khu v·ª±c kho")
        st.dataframe(st.session_state.warehouses, use_container_width=True)

    # ‚ûï Th√™m khu v·ª±c kho
    with st.expander("‚ûï Th√™m khu v·ª±c kho"):
        with st.form("add_warehouse_form", clear_on_submit=True):
            warehouse_id = st.text_input("M√£ kho")
            area = st.text_input("Khu v·ª±c")
            note = st.text_input("Ghi ch√∫")
            submitted = st.form_submit_button("Th√™m")

            if submitted:
                if warehouse_id and area:
                    # Th√™m d·ªØ li·ªáu m·ªõi v√†o DataFrame
                    new_row = {"M√£ kho": warehouse_id, 
                               "Khu v·ª±c": area, 
                               "Ghi ch√∫": note}
                    st.session_state.warehouses = pd.concat(
                        [st.session_state.warehouses, pd.DataFrame([new_row])],
                        ignore_index=True
                    )
                    st.success("‚úÖ Th√™m khu v·ª±c kho th√†nh c√¥ng!")
                    st.rerun()
                else:
                    st.error("‚ùå Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!")

    # ‚úèÔ∏è S·ª≠a khu v·ª±c kho
    with st.expander("‚úèÔ∏è S·ª≠a khu v·ª±c kho"):
        warehouse_id_to_edit = st.text_input("Nh·∫≠p m√£ kho c·∫ßn s·ª≠a")
        if warehouse_id_to_edit:
            df = st.session_state.warehouses
            if warehouse_id_to_edit in df["M√£ kho"].values:
                row_to_edit = df[df["M√£ kho"] == warehouse_id_to_edit].iloc[0]
                new_area = st.text_input("Khu v·ª±c", value=row_to_edit["Khu v·ª±c"])
                new_note = st.text_input("Ghi ch√∫", value=row_to_edit["Ghi ch√∫"])
                if st.button("C·∫≠p nh·∫≠t"):
                    st.session_state.warehouses.loc[
                        df["M√£ kho"] == warehouse_id_to_edit, ["Khu v·ª±c", "Ghi ch√∫"]
                    ] = [new_area, new_note]
                    st.success("‚úÖ C·∫≠p nh·∫≠t khu v·ª±c kho th√†nh c√¥ng!")
                    st.rerun()
            else:
                st.error("‚ùå M√£ kho kh√¥ng t·ªìn t·∫°i!")

    # üóëÔ∏è X√≥a khu v·ª±c kho
    with st.expander("üóëÔ∏è X√≥a khu v·ª±c kho"):
        warehouse_id_to_delete = st.text_input("Nh·∫≠p m√£ kho mu·ªën x√≥a")
        if st.button("X√≥a"):
            df = st.session_state.warehouses
            if warehouse_id_to_delete in df["M√£ kho"].values:
                st.session_state.warehouses = df[df["M√£ kho"] != warehouse_id_to_delete]
                st.success(f"‚úÖ ƒê√£ x√≥a khu v·ª±c kho c√≥ m√£ kho: {warehouse_id_to_delete}")
            else:
                st.error("‚ùå M√£ kho kh√¥ng t·ªìn t·∫°i!")